<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Boban's blog</title>
    <description></description>
    <link>http://10.1.1.157:8002/</link>
    <atom:link href="http://10.1.1.157:8002/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 15 Jan 2017 11:35:00 +0800</pubDate>
    <lastBuildDate>Sun, 15 Jan 2017 11:35:00 +0800</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Linux下find,xargs,cp的结合使用</title>
        <description>最近遇到一个需要拷贝目录下core文件并打包上传的工作，简单记录一下用到的命令:

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
   &lt;span class=&quot;c&quot;&gt;##使用find查找core并保存&lt;/span&gt;
   find ~/asw_server/ -name &lt;span class=&quot;s2&quot;&gt;&quot;core.*&quot;&lt;/span&gt; -type f -ctime -1 |xargs -i sudo cp &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; ~/version_bak/coredir/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

简单解释一下：

find -ctime  表示changetime，改变时间状态的文件  -1 表示1天内

&lt;h5 id=&quot;下面是同类的参数列表&quot;&gt;下面是同类的参数列表&lt;/h5&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	-amin n   查找系统中最后N分钟访问的文件
	-atime n  查找系统中最后n&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;24小时访问的文件
	-cmin n   查找系统中最后N分钟被改变文件状态的文件
	-ctime n  查找系统中最后n&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;24小时被改变文件状态的文件
	-mmin n   查找系统中最后N分钟被改变文件数据的文件
	-mtime n  查找系统中最后n&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;24小时被改变文件数据的文件
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

xargs 每次处理一部分从管道传来的文件

&lt;h5 id=&quot;下面是man-xargs得到的信息&quot;&gt;下面是man xargs得到的信息：&lt;/h5&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
XARGS&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                                                                                                              XARGS&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

NAME
       xargs - build and execute &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;lines from standard input

SYNOPSIS
       xargs  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-0prtx]  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-E  eof-str]  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-e[eof-str]]  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--eof[&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eof-str]]  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--null]  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-d  delimiter]  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--delimiter delimiter] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-I replace-str] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-i[replace-str]]
       &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--replace[&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;replace-str]] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-l[max-lines]] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-L max-lines] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--max-lines[&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;max-lines]] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-n max-args] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--max-args&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;max-args] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-s max-chars] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--max-chars&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;max-
       chars]  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-P  max-procs]  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--max-procs&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;max-procs] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--interactive] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--verbose] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--exit] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--no-run-if-empty] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--arg-file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;file] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--show-limits] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--version]
       &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--help] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;initial-arguments]]

DESCRIPTION
       This manual page documents the GNU version of xargs.  xargs reads items from the standard input, delimited by blanks &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;which can be protected with  dou‐
       ble or single quotes or a backslash&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; or newlines, and executes the &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default is /bin/echo&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; one or more &lt;span class=&quot;nb&quot;&gt;times &lt;/span&gt;with any initial-arguments followed
       by items &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;from standard input.  Blank lines on the standard input are ignored.

       Because Unix filenames can contain blanks and newlines, this default behaviour is often problematic; filenames containing blanks  and/or  newlines  are
       incorrectly processed by xargs.  In these situations it is better to use the -0 option, which prevents such problems.   When using this option you will
       need to ensure that the program which produces the input &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;xargs also uses a null character as a separator.  If that program is GNU find &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;example,
       the -print0 option does this &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;you.

       If any invocation of the &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;exits with a status of 255, xargs will stop immediately without reading any further input.  An error message is issued
       on stderr when this happens.

OPTIONS
       --arg-file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;file
       -a file
              Read items from file instead of standard input.  If you use this option, stdin remains unchanged when commands are  run.   Otherwise,  stdin  is
              redirected from /dev/null.

       --null
       -0     Input  items are terminated by a null character instead of by whitespace, and the quotes and backslash are not special &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;every character is taken
              literally&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.  Disables the end of file string, which is treated like any other argument.  Useful when input  items  might  contain  white  space,
              quote marks, or backslashes.  The GNU find -print0 option produces input suitable &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;this mode.

       --delimiter&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;delim
       -d delim
              Input  items  are terminated by the specified character.  Quotes and backslash are not special; every character &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the input is taken literally.
              Disables the end-of-file string, which is treated like any other argument.  This can be used when the input consists of simply newline-separated
              items, although it is almost always better to design your program to use --null where this is possible.  The specified delimiter may be a single
              character, a C-style character escape such as &lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;, or an octal or hexadecimal escape code.  Octal and hexadecimal escape codes are understood  as
              &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the &lt;span class=&quot;nb&quot;&gt;printf &lt;/span&gt;command.   Multibyte characters are not supported.

       -E eof-str
              Set  the  end  of file string to eof-str.  If the end of file string occurs as a line of input, the rest of the input is ignored.  If neither -E
              nor -e is used, no end of file string is used.

       --eof[&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eof-str]
       -e[eof-str]
              This option is a synonym &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the -E option.  Use -E instead, because it is POSIX compliant &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;this option is not.   If  eof-str  is  omitted,
              there is no end of file string.  If neither -E nor -e is used, no end of file string is used.

       --help Print a summary of the options to xargs and exit.

       -I replace-str
              Replace  occurrences  of replace-str &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the initial-arguments with names &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;from standard input.  Also, unquoted blanks &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;not terminate input
              items; instead the separator is the newline character.  Implies -x and -L 1.

       --replace[&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;replace-str]
       -i[replace-str]
              This option is a synonym &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; -Ireplace-str &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;replace-str is specified, and &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; -I&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; otherwise.  This option is deprecated; use -I instead.

       -L max-lines
              Use at most max-lines nonblank input lines per &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;line.  Trailing blanks cause an input line to be logically continued on  the  next  input
              line.  Implies -x.

       --max-lines[&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;max-lines]
       -l[max-lines]
              Synonym &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the -L option.  Unlike -L, the max-lines argument is optional.  If max-lines is not specified, it defaults to one.  The -l option is
              deprecated since the POSIX standard specifies -L instead.

       --max-args&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;max-args
       -n max-args
              Use at most max-args arguments per &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;line.  Fewer than max-args arguments will be used &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the size &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;see the -s option&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is exceeded, unless
              the -x option is given, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;which &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; xargs will exit.

       --interactive
       -p     Prompt the user about whether to run each &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;line and &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;a line from the terminal.  Only run the &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;line &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the response starts with
              &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;y&lt;span class=&quot;s1&quot;&gt;' or `Y'&lt;/span&gt;.  Implies -t.

       --no-run-if-empty
       -r     If the standard input does not contain any nonblanks, &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;not run the command.  Normally, the &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;is run once even  &lt;span class=&quot;k&quot;&gt;if  &lt;/span&gt;there  is  no  input.
              This option is a GNU extension.

       --max-chars&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;max-chars
       -s max-chars
              Use  at most max-chars characters per &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;line, including the &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;and initial-arguments and the terminating nulls at the ends of the ar‐
              gument strings.  The largest allowed value is system-dependent, and is calculated as the argument length limit &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;, less the size  of  your
              environment,  less 2048 bytes of headroom.  If this value is more than 128KiB, 128Kib is used as the default value; otherwise, the default value
              is the maximum.  1KiB is 1024 bytes.

       --verbose
       -t     Print the &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;line on the standard error output before executing it.

       --version
              Print the version number of xargs and exit.

       --show-limits
              Display the limits on the &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;-line length which are imposed by the operating system, xargs&lt;span class=&quot;s1&quot;&gt;' choice of buffer size and the -s  option.   Pipe
              the input from /dev/null (and perhaps specify --no-run-if-empty) if you don'&lt;/span&gt;t want xargs to &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;anything.

       --exit
       -x     Exit &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the size &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;see the -s option&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is exceeded.

       --max-procs&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;max-procs
       -P max-procs
              Run  up to max-procs processes at a &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;; the default is 1.  If max-procs is 0, xargs will run as many processes as possible at a time.  Use the
              -n option with -P; otherwise chances are that only one &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;will be &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.

EXAMPLES
       find /tmp -name core -type f -print | xargs /bin/rm -f

       Find files named core &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;or below the directory /tmp and delete them.  Note that this will work incorrectly &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;there are any filenames containing  new‐
       lines or spaces.

       find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f

       Find files named core &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;or below the directory /tmp and delete them, processing filenames &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;such a way that file or directory names containing spaces
       or newlines are correctly handled.

       find /tmp -depth -name core -type f -delete

       Find files named core &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;or below the directory /tmp and delete them, but more efficiently than &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the previous example &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;because we avoid the  need  to
       use fork&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; and &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; to launch rm and we don&lt;span class=&quot;s1&quot;&gt;'t need the extra xargs process).

       cut -d: -f1 &amp;lt; /etc/passwd | sort | xargs echo

       Generates a compact listing of all the users on the system.

       xargs sh -c '&lt;/span&gt;emacs &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &amp;lt; /dev/tty&lt;span class=&quot;s1&quot;&gt;' emacs

       Launches  the  minimum number of copies of Emacs needed, one after the other, to edit the files listed on xargs'&lt;/span&gt; standard input.  This example achieves
       the same effect as BSD&lt;span class=&quot;s1&quot;&gt;'s -o option, but in a more flexible and portable way.

EXIT STATUS
       xargs exits with the following status:
       0 if it succeeds
       123 if any invocation of the command exited with status 1-125
       124 if the command exited with status 255
       125 if the command is killed by a signal
       126 if the command cannot be run
       127 if the command is not found
       1 if some other error occurred.

       Exit codes greater than 128 are used by the shell to indicate that a program died due to a fatal signal.

STANDARDS CONFORMANCE
       As of GNU xargs version 4.2.9, the default behaviour of xargs is not to have a logical end-of-file marker.  POSIX (IEEE Std 1003.1, 2004  Edition)  al‐
       lows this.

       The  -l  and  -i options appear in the 1997 version of the POSIX standard, but do not appear in the 2004 version of the standard.  Therefore you should
       use -L and -I instead, respectively.

       The POSIX standard allows implementations to have a limit on the size of arguments to the exec functions.  This limit could be as low as 4096 bytes in‐
       cluding the size of the environment.  For scripts to be portable, they must not rely on a larger value.  However, I know of no implementation whose ac‐
       tual limit is that small.  The --show-limits option can be used to discover the actual limits in force on the current system.

SEE ALSO
       find(1), locate(1), locatedb(5), updatedb(1), fork(2), execvp(3), Finding Files (on-line in Info, or printed)

BUGS
       The -L option is incompatible with the -I option, but perhaps should not be.

       It is not possible for xargs to be used securely, since there will always be a time gap between the production of the list of input files and their use
       in  the  commands that xargs issues.  If other users have access to the system, they can manipulate the filesystem during this time window to force the
       action of the commands xargs runs to apply to files that you didn'&lt;/span&gt;t intend.  For a more detailed discussion of this and related problems, please  refer
       to  the &lt;span class=&quot;sb&quot;&gt;``&lt;/span&gt;Security Considerations&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; chapter &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the findutils Texinfo documentation.  The -execdir option of find can often be used as a more secure al‐
       ternative.

       When you use the -I option, each line &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;from the input is buffered internally.   This means that there is an upper limit on the length of input line
       that  xargs will accept when used with the -I option.  To work around this limitation, you can use the -s option to increase the amount of buffer space
       that xargs uses, and you can also use an extra invocation of xargs to ensure that very long lines &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;not occur.  For example:

       somecommand | xargs -s 50000 &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; | xargs -I &lt;span class=&quot;s1&quot;&gt;'{}'&lt;/span&gt; -s 100000 rm &lt;span class=&quot;s1&quot;&gt;'{}'&lt;/span&gt;

       Here, the first invocation of xargs has no input line length limit because it doesn&lt;span class=&quot;s1&quot;&gt;'t use the -i option.  The second invocation of xargs does have such
       a  limit, but we have ensured that the it never encounters a line which is longer than it can handle.   This is not an ideal solution.  Instead, the -i
       option should not impose a line length limit, which is why this discussion appears in the BUGS section.  The problem doesn'&lt;/span&gt;t occur with the  output  of
       find&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; because it emits just one filename per line.

       The best way to report a bug is to use the form at http://savannah.gnu.org/bugs/?group&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;findutils.  The reason &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;this is that you will &lt;span class=&quot;k&quot;&gt;then &lt;/span&gt;be able to
       track progress &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;fixing the problem.   Other comments about xargs&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; and about the findutils package &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;general can be sent to the bug-findutils mail‐
       ing list.  To join the list, send email to bug-findutils-request@gnu.org.

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 15 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://10.1.1.157:8002/2017/01/15/find-xargs-with-cp/</link>
        <guid isPermaLink="true">http://10.1.1.157:8002/2017/01/15/find-xargs-with-cp/</guid>
        
        <category>Linux</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>Hello Github Pages</title>
        <description>第一篇文章。</description>
        <pubDate>Wed, 11 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://10.1.1.157:8002/2017/01/11/first-blog/</link>
        <guid isPermaLink="true">http://10.1.1.157:8002/2017/01/11/first-blog/</guid>
        
        <category>talk</category>
        
        
        <category>talk</category>
        
      </item>
    
  </channel>
</rss>
